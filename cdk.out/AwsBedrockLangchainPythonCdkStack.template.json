{
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "Lambda execution policy for custom resources created by higher level CDK constructs",
     "id": "AwsSolutions-IAM4",
     "applies_to": [
      "Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     ]
    }
   ]
  }
 },
 "Resources": {
  "LambdaRole3A44B857": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role to access Bedrock service by lambda",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsBedrockLangchainPythonCdkStack/LambdaRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Lambda needs * access to all objects inside S3 bucket. And Bedrock all actions are allowed",
       "id": "AwsSolutions-IAM5"
      }
     ]
    }
   }
  },
  "LambdaRoleDefaultPolicy75625A82": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "bedrock:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaRoleDefaultPolicy75625A82",
    "Roles": [
     {
      "Ref": "LambdaRole3A44B857"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsBedrockLangchainPythonCdkStack/LambdaRole/DefaultPolicy/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Lambda needs * access to all objects inside S3 bucket. And Bedrock all actions are allowed",
       "id": "AwsSolutions-IAM5"
      }
     ]
    }
   }
  },
  "boto3lambdalayer7DAA939E": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleArchitectures": [
     "arm64"
    ],
    "CompatibleRuntimes": [
     "python3.11"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6436e786fc4f964cfc469e964d3eea4825a4ee52efa7ecbf9204b159a9ab9297.zip"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsBedrockLangchainPythonCdkStack/boto3-lambda-layer/Resource",
    "aws:asset:path": "asset.6436e786fc4f964cfc469e964d3eea4825a4ee52efa7ecbf9204b159a9ab9297",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Content"
   }
  },
  "langchainlambdalayer9A550CAA": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleArchitectures": [
     "arm64"
    ],
    "CompatibleRuntimes": [
     "python3.11"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "784a2ee02d69808bc1f2db81251a2730608f9f2ee01073d7355757443495969b.zip"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsBedrockLangchainPythonCdkStack/langchain-lambda-layer/Resource",
    "aws:asset:path": "asset.784a2ee02d69808bc1f2db81251a2730608f9f2ee01073d7355757443495969b",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Content"
   }
  },
  "langchainbedrocklambda4126827D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "67ed54ed604029db4e0e271ff138d055f0251aa1fb74a527d8743b9bac9342d2.zip"
    },
    "Environment": {
     "Variables": {
      "MODEL_ID": "anthropic.claude-3-sonnet-20240229-v1:0",
      "KB_ID": "MIR4JXVSXG",
      "GITHUB_REPO": "mybedrockdemo-repo",
      "GITHUB_OWNER": "relentless1729"
     }
    },
    "Handler": "index.lambda_handler",
    "Layers": [
     {
      "Ref": "boto3lambdalayer7DAA939E"
     },
     {
      "Ref": "langchainlambdalayer9A550CAA"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "LambdaRole3A44B857",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "LambdaRoleDefaultPolicy75625A82",
    "LambdaRole3A44B857"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsBedrockLangchainPythonCdkStack/langchain-bedrock-lambda/Resource",
    "aws:asset:path": "asset.67ed54ed604029db4e0e271ff138d055f0251aa1fb74a527d8743b9bac9342d2",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Lets get this to work first before dealing with cfn_nag",
       "id": "AwsSolutions-L1"
      }
     ]
    }
   }
  },
  "langchainbedrocklambdabedrockpermission739BE40E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "langchainbedrocklambda4126827D",
      "Arn"
     ]
    },
    "Principal": "bedrock.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": "arn:aws:bedrock:ap-southeast-2:982981017825:agent/UZZARJLGTM"
   },
   "Metadata": {
    "aws:cdk:path": "AwsBedrockLangchainPythonCdkStack/langchain-bedrock-lambda/bedrock-permission"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PQY7CMAxFz9K9Ywq9wECkWc2iKtJskUlTyDRNUJwKVVHujtIyEqv3bX9b3wfc1zWmuqInC9WPwporpnMkNQI9+ZIMTZg6bzXIwa1svTVqKeWmMnBzIWYdGY8FwA2eZjXqeCLWYGm69oRJDu6HFh1+dWDjHXzPTsUi5OA+davDZLhYcoZOs5+D0rBePke6GXdbo/wP5OCkd70p6xlqQfZxJ6yrr/dHu8Itg3gs8e7d29KuxWekDFtv1+D+gE31x8aIMLtoJo3dxhcKrk9MMQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "AwsBedrockLangchainPythonCdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}